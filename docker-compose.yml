
services:
  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - backend
    depends_on:
      - frontend
      - web
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    expose:
      - "4173"
    networks:
      - backend
  web:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    command: >
      sh -c "
        python manage.py migrate &&
        gunicorn server_config.wsgi:application --bind 0.0.0.0:8000
      "
    networks:
      - backend
    depends_on:
      - db
  db:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  pgdata: