version: '3.8'

networks:
  backend:
    driver: bridge

volumes:
  pgdata:

services:
  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    networks: [backend]
    depends_on:
      - frontend
      - web

  db:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [backend]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    networks: [backend]
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    expose:
      - "5173"
    networks: [backend]